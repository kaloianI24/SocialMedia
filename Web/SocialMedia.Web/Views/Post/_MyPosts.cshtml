@using SocialMedia.Areas.Identity.Data
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model SocialMediaUserServiceModel
<div class="main-content2">
    @if (Model.IsPrivate && !(bool)ViewData["AreFriends"] && !(bool)ViewData["IsOwner"])
    {
        <h3>This account is private so you cannot see the posts.</h3>
    }
    else
    {
        @if (!Model.Posts.Any(p => p.DeletedOn == null))
        {
            <h3>You don't have posts</h3>
        }
        else
        {        
            @foreach (var post in @Model.Posts.Where(p => p.DeletedOn == null).OrderByDescending(p => p.CreatedOn))
            {
                <div class="post" data-post-id="@post.Id">
                    <div class="post-header">
                        <a href="/Post/MyPage?userId=@Model.Id">
                            <img src="@Model.ProfilePicture.CloudUrl.Replace("http://", "https://")" alt="Profile Picture" class="profile-pic">
                        </a>
                        <div class="post-info">
                            <span class="username">@Model.UserName</span>
                            <span class="location">@post.CreatedOn.ToString("MM/dd/yyyy")</span> <span class="location"></span>
                        </div>
                        @if ((bool)ViewData["IsOwner"])
                        {
                            <button type="button" class="btn-delete-post">Delete post</button>
                            <button class="btn-update-post"
                                    onclick="window.location.href='/Post/Update?postId=@post.Id'">
                                Update post
                            </button>
                        }
                    </div>
                    <div class="carousel">
                        <div class="carousel-images">
                            @foreach (var photo in post.Attachments)
                            {
                                <img src=@photo.CloudUrl.Replace("http://", "https://") alt="Post Image" class="post-image">
                            }
                        </div>
                        <button type="button" button class="carousel-arrow left-arrow">&lt;</button>
                        <button type="button" button class="carousel-arrow right-arrow">&gt;</button>
                        <div class="carousel-indicators">
                            <span class="dot active"></span>
                            @for (int i = 0; i < post.Attachments.Count - 1; i++)
                            {
                                <span class="dot"></span>
                            }
                        </div>
                        <div class="image-counter">1 / @post.Attachments.Count</div>
                    </div>


                <div class="post-actions">
                    <div class="post-likes">
                        <div class="likes-count">
                            <img src="@Url.Content("~/images/heart.svg")"
                                 class="reaction-heart"
                                 data-liked="false"
                                 data-post-id="@post.Id" />

                            <div class="count-likes-number">0</div>

                            <img src="@Url.Content("~/images/comment.svg")" class="comment-image">
                            <div class="count-comment-number">0</div>
                        </div>
                    </div>
                </div>
				
                 
                <div class="post-caption">
                    <span class="username">@Model.UserName</span>
                    <p class="post-description">
                        @string.Join(" ", @post.Description.Split(" ").Take(10))
                        <span class="post-description-hidden-text">
                            @string.Join(" ", @post.Description.Split(" ").Skip(10))
                        </span>
                        @if (post.Description.Split(" ").Length > 10)
                        {
                            <button type="button" class="toggle-btn">Read more</button>
                        }
                    </p>
                    <div class="tags">
                        @foreach (var tag in @post.Tags)
                        {
                            <span>#@tag.Name</span>
                        }
                    </div>
					
                    <div class="taggedUsers">
                        @for (int i = 0; i < post.TaggedUsersId.Count; i++)
                        {
                            <a class="links" href="/Post/MyPage?userId=@post.TaggedUsersId.ElementAt(i)">
                                <span class="taggedUsers-text">@('@')@post.TaggedUsersUserName.ElementAt(i)</span>
                            </a>
                        }
                    </div>
                </div>
            </div>

            }
        }
    }
</div>
<script>
		document.addEventListener("click", function (event) {
		if (event.target.classList.contains("reaction-heart")) {
			let image = event.target;
			let liked = image.getAttribute("data-liked") === "true";
			let counter = image.parentElement.querySelector(".count-likes-number");

			if (liked) {
				image.src = "/images/heart.svg";
				counter.textContent = Math.max(0, parseInt(counter.textContent) - 1);
				image.setAttribute("data-liked", "false");
			} else {
				image.src = "/images/heart.png";
				counter.textContent = parseInt(counter.textContent) + 1;
				image.setAttribute("data-liked", "true");
			}
		}
	});
</script>
<script>
    document.querySelectorAll('.btn-delete-post').forEach(b => b.addEventListener('click', (e) => {
        const postId = e.target.closest('.post').dataset.postId;

        fetch('/Post/DeletePost?postId=' + postId, {
            method: 'POST',
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then((res) => {
            if (res.ok) {
                document.querySelector(`.post[data-post-id="${postId}"]`).remove();
                alert('Post deleted successfully!');
            } else {
                alert('Failed to delete the post.');
            }
        })
        .catch((error) => console.error(error));
    }));
</script>