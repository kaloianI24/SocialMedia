@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using Microsoft.AspNetCore.Identity
@using SocialMedia.Areas.Identity.Data
@using SocialMedia.Data.Models
@using SocialMedia.Service.Models
@using SocialMedia.Web.Models.Post

@inject SignInManager<SocialMediaUser> SignInManager
@inject UserManager<SocialMediaUser> UserManager

@{
    ViewData["Title"] = "Home Page";
    var isAdmin = ViewData["IsAdmin"] != null && (bool)ViewData["IsAdmin"];
    var savedPosts = (List<string>)this.ViewData["SavedPosts"] ?? new List<string>();
}

@model List<SearchedPostsWebModel>

@if (SignInManager.IsSignedIn(User))
{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="~/SocialMedia.styles.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
        <title>Document</title>
    </head>
    <body>
        @if (isAdmin)
        {
            <div class="admin-banner">
                Admin
            </div>
        }

        <div class="navbar">
            <form asp-action="Search" asp-controller="Home" method="get">
                <input placeholder="Search..." type="text" name="query" class="input">
                <button type="submit">Search</button>
            </form>
        </div>

        <div class="main-content">
            @foreach (var post in Model)
            {
                <div class="post">
                    <div class="post-header">
                        @if(post.IsUserDeleted)
                        {
                            <img src="@post.ProfilePictureUrl.Replace("http://", "https://")" alt="Profile Picture" class="profile-pic">
                            <div class="post-info">
                                <span class="username">Anonymous</span>
                                <span class="location">@post.CreatedOn.ToString("MM/dd/yyyy")</span>
                            </div>
                        }
                        else
                        {
                            <a href="/Post/MyPage?userId=@post.CreatedById">
                                <img src="@post.ProfilePictureUrl.Replace("http://", "https://")" alt="Profile Picture" class="profile-pic">
                            </a>
                            <div class="post-info">
                                <span class="username">@post.UserName</span>
                                <span class="location">@post.CreatedOn.ToString("MM/dd/yyyy")</span>
                            </div>
                        }


                    </div>
                    <div class="carousel">
                        <div class="carousel-images">
                            @foreach (var attachmentUrl in post.AttachmentUrls)
                            {
                                <img src="@attachmentUrl.Replace("http://", "https://")" alt="Post Image" class="post-image">
                            }
                        </div>
                        <button type="button" class="carousel-arrow left-arrow">&lt;</button>
                        <button type="button" class="carousel-arrow right-arrow">&gt;</button>
                        <div class="carousel-indicators">
                            <span class="dot active"></span>
                            @for (int i = 0; i < post.AttachmentUrls.Count - 1; i++)
                            {
                                <span class="dot"></span>
                            }
                        </div>
                        <div class="image-counter">1 / @post.AttachmentUrls.Count</div>
                    </div>

                    <div class="post-actions">
                        <div class="post-likes">
                            <div class="likes-count" id="image-container">
                                <img id="toggleImage" src="~/images/heart.svg" alt="SVG Image" class="reaction-heart" data-liked="false">
                                <div class="count-likes-number">0</div>
                                <img src="~/images/comment.svg" class="comment-image">
                                <div class="count-comment-number">0</div>
                                <div class="comment-input-field">
                                    <textarea class="form-control" me-1 rows="1" placeholder="Add a comment..."></textarea>
                                </div>
                                <div class="comment-button-holder d-none d-flex justify-content-end">
                                    <button class="btn btn-primary fw-bold comment-submit-button">Post</button>
                                </div>
                                <div class="details-posted-comment"></div>
                                @if (savedPosts is not null && savedPosts.Contains(post.Id))
                                {
                                    <button type="button" class="btn-unsave-post saved" data-post-id="@post.Id">
                                        <img src="~/images/savedPost.png" class="save-image">
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn-save-post" data-post-id="@post.Id">
                                        <img src="~/images/unsavedPost.png" class="save-image">
                                    </button>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="post-caption">
                        @if (post.IsUserDeleted)
                        {
                            <span class="username">Anonymous</span>
                        }
                        else
                        {
                            <span class="username">@post.UserName</span>
                        }                        
                        <p class="post-description">
                            @string.Join(" ", @post.Description.Split(" ").Take(10))
                            @if (post.Description.Split(" ").Length > 10)
                            {
                                <span class="post-description-hidden-text">
                                    @string.Join(" ", @post.Description.Split(" ").Skip(10))
                                </span>
                                <button type="button" class="toggle-btn">Read more</button>
                            }
                        </p>
                        <div class="tags">
                            @foreach (var tag in @post.Tags)
                            {
                                <span>#@tag</span>
                            }
                        </div>
                        <div class="taggedUsers">
                            @for (int i = 0; i < post.TaggedUsersId.Count; i++)
                            {
                                <a class="links" href="/Post/MyPage?userId=@post.TaggedUsersId.ElementAt(i)">
                                    <span class="taggedUsers-text">@('@')@post.TaggedUsersUserNames.ElementAt(i)</span>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </body>
    </html>

    @section Scripts {
        <script src="~/js/imagesFunctions.js"></script>
        <script>
            const autoResizeTextarea = (textarea) => {
                textarea.style.height = "auto";
                textarea.style.height = `${Math.min(textarea.scrollHeight, 150)}px`;
            };

            const textarea = document.querySelector(".comment-input-field textarea");
            textarea.addEventListener("input", () => {
                autoResizeTextarea(textarea);
            });

            document.querySelector(".comment-input-field textarea").addEventListener("focusin", () => {
                autoResizeTextarea(textarea);
                document.querySelector(".comment-button-holder").classList.remove("d-none");
                document.querySelector(".comment-button-holder").classList.add("d-flex");
            });

            document.querySelector(".comment-input-field textarea").addEventListener("focusout", () => {
                document.querySelector(".comment-button-holder").classList.add("d-none");
                document.querySelector(".comment-button-holder").classList.remove("d-flex");
            });
        </script>

        <script>
            document.querySelectorAll('.btn-save-post').forEach(b => b.addEventListener('click', (e) => {
                const button = e.target.closest('.btn-save-post');
                const postId = button.dataset.postId;

                fetch('/Post/SavePost?postId=' + postId, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then((res) => {
                    if (res.ok) {
                        if (!button.classList.contains('saved')) {
                        button.classList.add('saved');
                        button.querySelector('.save-image').src = '/images/savedPost.png';
                        }
                        alert('Post saved successfully!');
                    }
                    else {
                        alert('Failed to save the post.');
                    }
                })
                .catch((error) => console.error(error));
            }));
        </script>

        <script>
            document.querySelectorAll('.btn-unsave-post').forEach(b => b.addEventListener('click', (e) => {
                const button = e.target.closest('.btn-unsave-post');
                const postId = button.dataset.postId;

                fetch('/Post/UnsavePost?postId=' + postId, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then((res) => {
                    if (res.ok) {
                        if (button.classList.contains('saved')) {
                        button.classList.remove('saved');
                        button.querySelector('.save-image').src = '/images/unsavedPost.png';
                    }
                    alert('Post unsaved successfully!');
                    } else {
                        alert('Failed to unsave the post.');
                    }
                })
                .catch((error) => console.error(error));
            }));
        </script>
    }
}
