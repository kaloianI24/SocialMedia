@using Microsoft.AspNetCore.Identity
@using SocialMedia.Areas.Identity.Data
@using SocialMedia.Data.Models
@using SocialMedia.Service.Models
@using SocialMedia.Data.Models


@inject SignInManager<SocialMediaUser> SignInManager
@inject UserManager<SocialMediaUser> UserManager

@{
    ViewData["Title"] = "Home Page";
    var isAdmin = ViewData["IsAdmin"] != null && (bool)ViewData["IsAdmin"];
    var requests = (List<FriendRequest>)this.ViewData["FriendRequests"];

}

@model List<SocialMedia.Web.Models.Post.TaggedPostWebModel>
@if (SignInManager.IsSignedIn(User))
{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="~/SocialMedia.styles.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

        <title>Document</title>
    </head>
    <body>

        @if (isAdmin)
        {
            <div class="admin-banner">
                Admin
            </div>
        }

        <div class="navbar">
            <input placeholder="Search..." type="text" name="text" class="input">
        </div>

        <div class="sidebar-right">
            <div class="friend-requests-heading">Friend requests</div>
            <div class="all-requests">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }
                @foreach(var request in requests.Where(r => r.Status.Equals("Pending")))
                {
                    <div class="friend-requests" data-request-id="@request.Id">
                        <img src="@request.CreatedBy.ProfilePicture.CloudUrl" alt="Profile Picture" class="profile-pic">
                        <div class="request-info">
                            <span class="username-request">@request.CreatedBy.UserName</span>
                            <button class="btn-confirm" id="@request.Id">Confirm</button>
                            <button class="btn-delete" id="@request.Id">Delete</button>
                        </div>
                    </div>
                }         
            </div>
        </div>

        <div class="main-content">
            @foreach(var post in Model)
            {
                <div class="post">
                    <div class="post-header">
                        <a href="/Post/MyPage?userId=@post.CreatedById">
                            <img src="@post.ProfilePictureUrl.Replace("http://", "https://")" alt="Profile Picture" class="profile-pic">
                        </a>
                        <div class="post-info">
                            <span class="username">@post.UserName</span>
                            <span class="location">@post.CreatedOn.ToString("MM/dd/yyyy")</span> <span class="location"></span>
                        </div>
                    </div>
                    <div class="carousel">
                        <div class="carousel-images">
                            @foreach (var attachmentUrl in post.AttachmentUrls)
                            {
                                <img src=@attachmentUrl.Replace("http://", "https://") alt="Post Image" class="post-image">
                            }
                        </div>
                        <button type="button" button class="carousel-arrow left-arrow">&lt;</button>
                        <button type="button" button class="carousel-arrow right-arrow">&gt;</button>
                        <div class="carousel-indicators">
                            <span class="dot active"></span>
                            @for (int i = 0; i < post.AttachmentUrls.Count - 1; i++)
                            {
                                <span class="dot"></span>
                            }
                        </div>
                        <div class="image-counter">1 / @post.AttachmentUrls.Count</div>
                    </div>

                    <div class="post-actions">
                        <div class="post-likes">
                            <div class="likes-count" id="image-container">
                                <img id="toggleImage" src="~/images/heart.svg" alt="SVG Image" class="reaction-heart" data-liked="false">

                                <script>
                                    document.addEventListener("DOMContentLoaded", function () {
                                        const images = document.querySelectorAll(".reaction-heart");
                                        const img1 = "/images/heart.svg";
                                        const img2 = "/images/heart.png";

                                        images.forEach(image => {
                                            image.addEventListener("click", function() {
                                                let liked = this.getAttribute("data-liked") === "true";
                                                let counter = this.parentElement.querySelector(".count-likes-number");

                                                if (liked) {
                                                    this.src = img1;
                                                    counter.textContent = Math.max(0, parseInt(counter.textContent) - 1);
                                                    this.setAttribute("data-liked", "false");
                                                } else {
                                                    this.src = img2;
                                                    counter.textContent = parseInt(counter.textContent) + 1;
                                                    this.setAttribute("data-liked", "true");
                                                }
                                            });
                                        });
                                    });
                                </script>

                                <div class="count-likes-number">0</div>
                                <img src="~/images/comment.svg" class="comment-image">
								<div class="count-comment-number">0</div>

								<div class="comment-input-field">
									<textarea class="form-control" me-1 rows="1" placeholder="Add a comment..."></textarea>
                                </div>
                                        <div class="comment-button-holder d-none d-flex justify-content-end">
										    <button class="btn btn-primary fw-bold comment-submit-button">Post</button>
                                        </div>

                                <div class="details-posted-comment">

                                </div>


                            </div>
                        </div>
                    </div>

                    <div class="post-caption">
                        <span class="username">@post.UserName</span>
                        <p class="post-description">
                            @string.Join(" ", @post.Description.Split(" ").Take(10))
                            <span class="post-description-hidden-text">
                                @string.Join(" ", @post.Description.Split(" ").Skip(10))
                            </span>
                            @if (post.Description.Split(" ").Length > 10)
                            {
                                <button type="button" class="toggle-btn">Read more</button>
                            }
                        </p>
                        <div class="tags">
                            @foreach (var tag in @post.Tags)
                            {
                                <span>#@tag</span>
                            }
                        </div>
                        <div class="taggedUsers">
                            @for (int i = 0; i < post.TaggedUsersId.Count; i++)
                            {
                                <a class="links" href="/Post/MyPage?userId=@post.TaggedUsersId.ElementAt(i)">
                                    <span class="taggedUsers-text">@('@')@post.TaggedUsersUserNames.ElementAt(i)</span>
                                </a>
                            }
                        </div>
                    </div>
                </div>

            }
           
		</div>
		
    </body>
        
 

    </html>
    @section Scripts {
        <script src="~/js/imagesFunctions.js"></script>

    <script src="~/js/imagesFunctions.js"></script>

    <script>
        const autoResizeTextarea = (textarea) => {
                textarea.style.height = "auto";
                textarea.style.height = `${Math.min(textarea.scrollHeight, 150)}px`;
        };

        const textarea = document.querySelector(".comment-input-field textarea");

        textarea.addEventListener("input", () => {
            autoResizeTextarea(textarea);

        document.querySelector(".comment-input-field textarea".addEventListener("focusin", () => {
            autoResizeTextarea(textarea);
            document.querySelector(".comment-button-holder").classList.remove("d-none");
            document.querySelector(".comment-button-holder").classList.add("d-flex");
        }));

            document.querySelector(".comment-input-field textarea".addEventListener("focusout", () => {
                document.querySelector(".comment-button-holder").classList.add("d-none");
                document.querySelector(".comment-button-holder").classList.remove("d-flex");
            }));

    </script>

    <script>
        document.querySelectorAll('.btn-confirm').forEach(b => b.addEventListener('click', (e) => {
            var requestId = e.target.id;

            fetch('/Home/AcceptFriendRequest?requestId=' + requestId, {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                }
            })
            .then((res) => {
                if (res.ok) {
                     document.querySelector(`.friend-requests[data-request-id="${requestId}"]`).remove();
                    alert('You have successfully accepted the friend request!');
                } else {
                    alert('Failed to accept the request.');
                }
            })
            .catch((error) => console.error(error));
        }));
    </script>
        <script>
            document.querySelectorAll('.btn-delete').forEach(b => b.addEventListener('click', (e) => {
                var requestId = e.target.id;

                fetch('/Home/DeleteFriendRequest?requestId=' + requestId, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then((res) => {
                    if (res.ok) {
                        document.querySelector(`.friend-requests[data-request-id="${requestId}"]`).remove();
                        alert('You have successfully deleted the friend request!');
                    } else {
                        alert('Failed to delete the request.');
                    }
                })
                .catch((error) => console.error(error));
            }));
        </script>
    }
}


